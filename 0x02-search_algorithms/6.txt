The worst case space complexity of both an iterative linear, and binary approach is O(1) because this number cycles through the entirety of a list or array. The number represents an iterator (i) that moves consistently until it reaches the end. In Task 6. Big O #4, they ask us to find the space complexity of a given algorithm. Space complexity is a function describing the amount of memory (space) an algorithm takes in terms of the amount of inputto the algorithm. The parameters in our function are both recieving allocated memory space in bytes by being malloc'ed and moving through map[i], ultimately returning the double pointer to map.
